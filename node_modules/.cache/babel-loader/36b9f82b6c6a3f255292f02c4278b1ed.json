{"ast":null,"code":"import _classCallCheck from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\anil\\\\react\\\\src\\\\layouts\\\\Dashboard\\\\Dashboard.jsx\";\nimport React from \"react\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleActiveClick = function (color) {\n      _this.setState({\n        activeColor: color\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.mainPanel);\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        bgColor: this.state.backgroundColor,\n        activeColor: this.state.activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, dashboardRoutes.map(function (prop, key) {\n        if (prop.pro) {\n          return null;\n        }\n\n        if (prop.redirect) {\n          return React.createElement(Redirect, {\n            from: prop.path,\n            to: prop.pathTo,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Route, {\n          path: prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        });\n      })), React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(FixedPlugin, {\n        bgColor: this.state.backgroundColor,\n        activeColor: this.state.activeColor,\n        handleActiveClick: this.handleActiveClick,\n        handleBgClick: this.handleBgClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["D:\\anil\\react\\src\\layouts\\Dashboard\\Dashboard.jsx"],"names":["React","PerfectScrollbar","Route","Switch","Redirect","Header","Footer","Sidebar","FixedPlugin","dashboardRoutes","ps","Dashboard","props","handleActiveClick","color","setState","activeColor","handleBgClick","backgroundColor","state","navigator","platform","indexOf","refs","mainPanel","document","body","classList","toggle","destroy","e","history","action","scrollTop","scrollingElement","map","prop","key","pro","redirect","path","pathTo","component","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          <Switch>\n            {dashboardRoutes.map((prop, key) => {\n              if (prop.pro) {\n                return null;\n              }\n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} component={prop.component} key={key} />\n              );\n            })}\n          </Switch>\n          <Footer fluid />\n        </div>\n        <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n          handleActiveClick={this.handleActiveClick}\n          handleBgClick={this.handleBgClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}