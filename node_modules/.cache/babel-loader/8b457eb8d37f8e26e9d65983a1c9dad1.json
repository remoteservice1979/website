{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\anil\\\\react\\\\src\\\\components\\\\CustomButton\\\\CustomButton.jsx\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\"; // used to make this component's props into classes\n\nimport cx from \"classnames\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\n\nvar CustomButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomButton, _Component);\n\n  function CustomButton() {\n    _classCallCheck(this, CustomButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CustomButton).apply(this, arguments));\n  }\n\n  _createClass(CustomButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          simple = _this$props.simple,\n          round = _this$props.round,\n          icon = _this$props.icon,\n          neutral = _this$props.neutral,\n          leftLabel = _this$props.leftLabel,\n          rightLabel = _this$props.rightLabel,\n          wd = _this$props.wd,\n          link = _this$props.link,\n          fab = _this$props.fab,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"simple\", \"round\", \"icon\", \"neutral\", \"leftLabel\", \"rightLabel\", \"wd\", \"link\", \"fab\", \"className\"]);\n\n      var btnClasses = cx({\n        \"btn-simple\": simple,\n        \"btn-round\": round,\n        \"btn-icon\": icon,\n        \"btn-neutral\": neutral,\n        \"btn-wd\": wd,\n        \"btn-link\": link,\n        \"btn-fab\": fab\n      });\n\n      if (className !== undefined) {\n        btnClasses += \" \" + className;\n      }\n\n      return React.createElement(Button, Object.assign({\n        className: btnClasses\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), leftLabel ? React.createElement(\"span\", {\n        className: \"btn-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: leftLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), \" \") : null, this.props.children, rightLabel ? React.createElement(\"span\", {\n        className: \"btn-label btn-label-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: rightLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), \" \") : null);\n    }\n  }]);\n\n  return CustomButton;\n}(Component);\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\nexport default CustomButton;","map":{"version":3,"sources":["D:\\anil\\react\\src\\components\\CustomButton\\CustomButton.jsx"],"names":["React","Component","Button","cx","PropTypes","CustomButton","props","simple","round","icon","neutral","leftLabel","rightLabel","wd","link","fab","className","rest","btnClasses","undefined","children","propTypes","bool","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CACA;;AACA,OAAOC,EAAP,MAAe,YAAf,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Y;;;;;;;;;;;;;6BACK;AAAA,wBAaH,KAAKC,KAbF;AAAA,UAELC,MAFK,eAELA,MAFK;AAAA,UAGLC,KAHK,eAGLA,KAHK;AAAA,UAILC,IAJK,eAILA,IAJK;AAAA,UAKLC,OALK,eAKLA,OALK;AAAA,UAMLC,SANK,eAMLA,SANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,UAQLC,EARK,eAQLA,EARK;AAAA,UASLC,IATK,eASLA,IATK;AAAA,UAULC,GAVK,eAULA,GAVK;AAAA,UAWLC,SAXK,eAWLA,SAXK;AAAA,UAYFC,IAZE;;AAeP,UAAIC,UAAU,GAAGf,EAAE,CAAC;AAClB,sBAAcI,MADI;AAElB,qBAAaC,KAFK;AAGlB,oBAAYC,IAHM;AAIlB,uBAAeC,OAJG;AAKlB,kBAAUG,EALQ;AAMlB,oBAAYC,IANM;AAOlB,mBAAWC;AAPO,OAAD,CAAnB;;AAUA,UAAIC,SAAS,KAAKG,SAAlB,EAA6B;AAC3BD,QAAAA,UAAU,IAAI,MAAMF,SAApB;AACD;;AAED,aACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAEE;AAAnB,SAAmCD,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGN,SAAS,GACR;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAEA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAC8B,GAD9B,CADQ,GAIN,IALN,EAMG,KAAKL,KAAL,CAAWc,QANd,EAOGR,UAAU,GACT;AAAM,QAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAEA,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAC+B,GAD/B,CADS,GAIP,IAXN,CADF;AAeD;;;;EA7CwBX,S;;AAgD3BI,YAAY,CAACgB,SAAb,GAAyB;AACvBd,EAAAA,MAAM,EAAEH,SAAS,CAACkB,IADK;AAEvBd,EAAAA,KAAK,EAAEJ,SAAS,CAACkB,IAFM;AAGvBb,EAAAA,IAAI,EAAEL,SAAS,CAACkB,IAHO;AAIvBZ,EAAAA,OAAO,EAAEN,SAAS,CAACkB,IAJI;AAKvBT,EAAAA,EAAE,EAAET,SAAS,CAACkB,IALS;AAMvBR,EAAAA,IAAI,EAAEV,SAAS,CAACkB,IANO;AAOvBP,EAAAA,GAAG,EAAEX,SAAS,CAACkB,IAPQ;AAQvB;AACAX,EAAAA,SAAS,EAAEP,SAAS,CAACmB,MATE;AAUvB;AACAX,EAAAA,UAAU,EAAER,SAAS,CAACmB;AAXC,CAAzB;AAcA,eAAelB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n// used to make this component's props into classes\nimport cx from \"classnames\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass CustomButton extends Component {\n  render() {\n    const {\n      simple,\n      round,\n      icon,\n      neutral,\n      leftLabel,\n      rightLabel,\n      wd,\n      link,\n      fab,\n      className,\n      ...rest\n    } = this.props;\n\n    var btnClasses = cx({\n      \"btn-simple\": simple,\n      \"btn-round\": round,\n      \"btn-icon\": icon,\n      \"btn-neutral\": neutral,\n      \"btn-wd\": wd,\n      \"btn-link\": link,\n      \"btn-fab\": fab\n    });\n\n    if (className !== undefined) {\n      btnClasses += \" \" + className;\n    }\n\n    return (\n      <Button className={btnClasses} {...rest}>\n        {leftLabel ? (\n          <span className=\"btn-label\">\n            <i className={leftLabel} />{\" \"}\n          </span>\n        ) : null}\n        {this.props.children}\n        {rightLabel ? (\n          <span className=\"btn-label btn-label-right\">\n            <i className={rightLabel} />{\" \"}\n          </span>\n        ) : null}\n      </Button>\n    );\n  }\n}\n\nCustomButton.propTypes = {\n  simple: PropTypes.bool,\n  round: PropTypes.bool,\n  icon: PropTypes.bool,\n  neutral: PropTypes.bool,\n  wd: PropTypes.bool,\n  link: PropTypes.bool,\n  fab: PropTypes.bool,\n  // this is an icon\n  leftLabel: PropTypes.string,\n  // this is an icon\n  rightLabel: PropTypes.string\n};\n\nexport default CustomButton;\n"]},"metadata":{},"sourceType":"module"}