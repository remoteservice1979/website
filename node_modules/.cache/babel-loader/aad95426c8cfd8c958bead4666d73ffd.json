{"ast":null,"code":"import _classCallCheck from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\anil\\\\react\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\anil\\\\react\\\\src\\\\components\\\\FormInputs\\\\FormInputs.jsx\";\nimport React, { Component } from \"react\";\nimport { FormGroup, Label, Input, InputGroup, InputGroupAddon } from \"reactstrap\"; // used for making the prop types of this component\n\nimport PropTypes from \"prop-types\";\n\nvar FieldGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FieldGroup, _React$Component);\n\n  function FieldGroup(props) {\n    var _this;\n\n    _classCallCheck(this, FieldGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FieldGroup).call(this, props));\n    _this.state = {\n      focus: false\n    };\n    return _this;\n  }\n\n  _createClass(FieldGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          label = _this$props.label,\n          addonLeft = _this$props.addonLeft,\n          addonRight = _this$props.addonRight,\n          formGroupProps = _this$props.formGroupProps,\n          labelProps = _this$props.labelProps,\n          inputProps = _this$props.inputProps,\n          inputGroupProps = _this$props.inputGroupProps,\n          inputGroupAddonProps = _this$props.inputGroupAddonProps;\n      var classes = \" \";\n\n      if (inputGroupProps !== undefined) {\n        if (inputGroupProps.className !== undefined) {\n          classes += inputGroupProps.className + \" \";\n        }\n      }\n\n      if (addonLeft !== undefined || addonRight !== undefined) return React.createElement(InputGroup, Object.assign({}, inputGroupProps, {\n        className: classes + (this.state.focus ? \"input-group-focus\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), addonLeft !== undefined ? React.createElement(InputGroupAddon, Object.assign({}, inputGroupAddonProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), addonLeft) : \"\", React.createElement(Input, Object.assign({}, inputProps, {\n        onFocus: function onFocus(e) {\n          return _this2.setState({\n            focus: true\n          });\n        },\n        onBlur: function onBlur(e) {\n          return _this2.setState({\n            focus: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), addonRight !== undefined ? React.createElement(InputGroupAddon, Object.assign({}, inputGroupAddonProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), addonRight) : \"\");\n      return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? React.createElement(FormGroup, Object.assign({}, formGroupProps, {\n        className: inputProps.type === \"radio\" ? \"form-check-radio\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Label, Object.assign({}, labelProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Input, Object.assign({}, inputProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"form-check-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), label ? label : \"\")) : React.createElement(FormGroup, Object.assign({}, formGroupProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), label ? React.createElement(Label, Object.assign({}, labelProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), label) : \"\", React.createElement(Input, Object.assign({}, inputProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FieldGroup;\n}(React.Component);\n\nexport var FormInputs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormInputs, _Component);\n\n  function FormInputs() {\n    _classCallCheck(this, FormInputs);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FormInputs).apply(this, arguments));\n  }\n\n  _createClass(FormInputs, [{\n    key: \"render\",\n    value: function render() {\n      var row = [];\n\n      for (var i = 0; i < this.props.ncols.length; i++) {\n        row.push(React.createElement(\"div\", {\n          key: i,\n          className: this.props.ncols[i],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(FieldGroup, Object.assign({}, this.props.proprieties[i], {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, row);\n    }\n  }]);\n\n  return FormInputs;\n}(Component);\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\nexport default FormInputs;","map":{"version":3,"sources":["D:\\anil\\react\\src\\components\\FormInputs\\FormInputs.jsx"],"names":["React","Component","FormGroup","Label","Input","InputGroup","InputGroupAddon","PropTypes","FieldGroup","props","state","focus","label","addonLeft","addonRight","formGroupProps","labelProps","inputProps","inputGroupProps","inputGroupAddonProps","classes","undefined","className","e","setState","type","FormInputs","row","i","ncols","length","push","proprieties","propTypes","arrayOf","string","object"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  FormGroup,\n  Label,\n  Input,\n  InputGroup,\n  InputGroupAddon\n} from \"reactstrap\";\n// used for making the prop types of this component\nimport PropTypes from \"prop-types\";\n\nclass FieldGroup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      focus: false\n    };\n  }\n  render() {\n    const {\n      label,\n      addonLeft,\n      addonRight,\n      formGroupProps,\n      labelProps,\n      inputProps,\n      inputGroupProps,\n      inputGroupAddonProps\n    } = this.props;\n    var classes = \" \";\n    if (inputGroupProps !== undefined) {\n      if (inputGroupProps.className !== undefined) {\n        classes += inputGroupProps.className + \" \";\n      }\n    }\n    if (addonLeft !== undefined || addonRight !== undefined)\n      return (\n        <InputGroup\n          {...inputGroupProps}\n          className={classes + (this.state.focus ? \"input-group-focus\" : \"\")}\n        >\n          {addonLeft !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonLeft}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n          <Input\n            {...inputProps}\n            onFocus={e => this.setState({ focus: true })}\n            onBlur={e => this.setState({ focus: false })}\n          />\n          {addonRight !== undefined ? (\n            <InputGroupAddon {...inputGroupAddonProps}>\n              {addonRight}\n            </InputGroupAddon>\n          ) : (\n            \"\"\n          )}\n        </InputGroup>\n      );\n    return inputProps.type === \"radio\" || inputProps.type === \"checkbox\" ? (\n      <FormGroup\n        {...formGroupProps}\n        className={inputProps.type === \"radio\" ? \"form-check-radio\" : \"\"}\n      >\n        <Label {...labelProps}>\n          <Input {...inputProps} />\n          <span className=\"form-check-sign\" />\n          {label ? label : \"\"}\n        </Label>\n      </FormGroup>\n    ) : (\n      <FormGroup {...formGroupProps}>\n        {label ? <Label {...labelProps}>{label}</Label> : \"\"}\n        <Input {...inputProps} />\n      </FormGroup>\n    );\n  }\n}\n\nexport class FormInputs extends Component {\n  render() {\n    var row = [];\n    for (var i = 0; i < this.props.ncols.length; i++) {\n      row.push(\n        <div key={i} className={this.props.ncols[i]}>\n          <FieldGroup {...this.props.proprieties[i]} />\n        </div>\n      );\n    }\n    return <div className=\"row\">{row}</div>;\n  }\n}\n\nFormInputs.propTypes = {\n  ncols: PropTypes.arrayOf(PropTypes.string),\n  proprieties: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default FormInputs;\n"]},"metadata":{},"sourceType":"module"}